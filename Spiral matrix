#include <iostream>
#include <vector>
using namespace std;

vector<int> printSpiral(vector<vector<int>> mat) {
    int n = mat.size(); // Number of rows
    int m = mat[0].size(); // Number of columns
    vector<int> result;

    int top = 0, bottom = n - 1, left = 0, right = m - 1;

    while (top <= bottom && left <= right) {
        // Traverse from left to right
        for (int i = left; i <= right; i++) {
            result.push_back(mat[top][i]);
        }
        top++; // Move top boundary down

        // Traverse from top to bottom
        for (int i = top; i <= bottom; i++) {
            result.push_back(mat[i][right]);
        }
        right--; // Move right boundary left

        // Traverse from right to left (if still in bounds)
        if (top <= bottom) {
            for (int i = right; i >= left; i--) {
                result.push_back(mat[bottom][i]);
            }
            bottom--; // Move bottom boundary up
        }

        // Traverse from bottom to top (if still in bounds)
        if (left <= right) {
            for (int i = bottom; i >= top; i--) {
                result.push_back(mat[i][left]);
            }
            left++; // Move left boundary right
        }
    }

    return result;
}

int main() {
    vector<vector<int>> matrix{
        {1, 2, 3, 4},
        {5, 6, 7, 8},
        {9, 10, 11, 12},
        {13, 14, 15, 16}
    };

    vector<int> ans = printSpiral(matrix);

    for (int i = 0; i < ans.size(); i++) {
        cout << ans[i] << " ";
    }
    cout << endl;

    return 0;
}
